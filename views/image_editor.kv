#:kivy 2.2.0
<image_editor>:  
  BoxLayout:    
    BoxLayout:      
      size_hint_x: 1
      size_hint_y: 1
      padding: (10, 10, 10, 10)
      BoxLayout:
        id: image_editor_box      
        size_hint_x: 1
        size_hint_y: 1          
    FloatLayout:      
      #:set button_spacing 8.333
      #:set button_size 30
      #:set position_loc 1
      #:set ratio_loc 3.5
      #:set ratio_font_size '12sp'
      #:set adjustment_loc 6
      #:set save_loc 11.5
      id: tools_box      
      orientation: 'vertical'
      size_hint_x: None      
      width: 200
      padding: (0, 2, 2, 2)
      canvas:
        Color:
          rgba: 0.145, 0.145, 0.149, 1.0
        Rectangle:
          pos: self.pos
          size: self.size

      Button:			
        id: back_button			
        pos: 6, root.height - 36
        size_hint: None, None
        size: button_size, button_size
        background_normal: 'images\\arrow-left.png'
        background_down: 'images\\rotate-left.png'
        border: (2, 2, 2, 2)
        on_press: root.go_back()

      Button:            
        id: rotate_left_button        
        pos: self.parent.pos[0] + button_spacing + ((button_size + button_spacing) * 0), root.height - ((button_spacing + button_size) * (position_loc + 0))
        size_hint: None, None
        size: button_size, button_size
        background_normal: 'images\\rotate-left.png'
        background_down: 'images\\rotate-left.png'
        border: (2, 2, 2, 2)
        on_press: root.start_adjustment(root.adjust_rotation, -0.2)
        on_release: root.stop_adjustment()       
      Button:            
        id: move_up_button        
        pos: self.parent.pos[0] + button_spacing + ((button_size + button_spacing) * 1), root.height - ((button_spacing + button_size) * (position_loc + 0))
        size_hint: None, None
        size: button_size, button_size
        background_normal: 'images\\arrow-up.png'
        background_down: 'images\\arrow-up.png'
        border: (2, 2, 2, 2)
        on_press: root.start_adjustment(root.adjust_position, (0, 0.5))
        on_release: root.stop_adjustment()  
      Button:            
        id: rotate_right_button        
        pos: self.parent.pos[0] + button_spacing + ((button_size + button_spacing) * 2), root.height - ((button_spacing + button_size) * (position_loc + 0))
        size_hint: None, None
        size: button_size, button_size
        background_normal: 'images\\rotate-right.png'
        background_down: 'images\\rotate-right.png'
        border: (2, 2, 2, 2)
        on_press: root.start_adjustment(root.adjust_rotation, 0.2)
        on_release: root.stop_adjustment()     
      Button:            
        id: move_left_button        
        pos: self.parent.pos[0] + button_spacing + ((button_size + button_spacing) * 0), root.height - ((button_spacing + button_size) * (position_loc + 1))
        size_hint: None, None
        size: button_size, button_size
        background_normal: 'images\\arrow-left.png'
        background_down: 'images\\arrow-left.png'
        border: (2, 2, 2, 2)
        on_press: root.start_adjustment(root.adjust_position, (0.5, 0))
        on_release: root.stop_adjustment()  
      Button:            
        id: move_down_button        
        pos: self.parent.pos[0] + button_spacing + ((button_size + button_spacing) * 1), root.height - ((button_spacing + button_size) * (position_loc + 1))
        size_hint: None, None
        size: button_size, button_size
        background_normal: 'images\\arrow-down.png'
        background_down: 'images\\arrow-down.png'
        border: (2, 2, 2, 2)
        on_press: root.start_adjustment(root.adjust_position, (0, -0.5))
        on_release: root.stop_adjustment()  
      Button:            
        id: move_right_button        
        pos: self.parent.pos[0] + button_spacing + ((button_size + button_spacing) * 2), root.height - ((button_spacing + button_size) * (position_loc + 1))
        size_hint: None, None
        size: button_size, button_size
        background_normal: 'images\\arrow-right.png'
        background_down: 'images\\arrow-right.png'
        border: (2, 2, 2, 2)
        on_press: root.start_adjustment(root.adjust_position, (-0.5, 0))
        on_release: root.stop_adjustment()  
      Button:            
        id: zoom_in_button        
        pos: self.parent.pos[0] + button_spacing + ((button_size + button_spacing) * 4), root.height - ((button_spacing + button_size) * (position_loc + 0))
        size_hint: None, None
        size: button_size, button_size
        background_normal: 'images\\zoom-in.png'
        background_down: 'images\\zoom-in.png'
        border: (2, 2, 2, 2)
        on_press: root.start_adjustment(root.adjust_zoom, -0.01)
        on_release: root.stop_adjustment()           
      Button:            
        id: zoom_out_button        
        pos: self.parent.pos[0] + button_spacing + ((button_size + button_spacing) * 4), root.height - ((button_spacing + button_size) * (position_loc + 1))
        size_hint: None, None
        size: button_size, button_size
        background_normal: 'images\\zoom-out.png'
        background_down: 'images\\zoom-out.png'
        border: (2, 2, 2, 2)
        on_press: root.start_adjustment(root.adjust_zoom, 0.01)
        on_release: root.stop_adjustment()      
      
      Button:            
        id: ratio_16_9_button
        text: '16:9'
        font_size: ratio_font_size
        pos: self.parent.pos[0] + (button_spacing * 1) + (button_size * 0), root.height - ((button_spacing + button_size) * (ratio_loc + 0))
        size_hint: None, None
        size: button_size, button_size        
        on_press: root.set_ratio(16 / 9)
      Button:            
        id: ratio_3_2_button
        text: '3:2'
        font_size: ratio_font_size
        pos: self.parent.pos[0] + (button_spacing * 2) + (button_size * 1), root.height - ((button_spacing + button_size) * (ratio_loc + 0))
        size_hint: None, None
        size: button_size, button_size        
        on_press: root.set_ratio(3 / 2)
      Button:            
        id: ratio_5_4_button
        text: '5:4'
        font_size: ratio_font_size
        pos: self.parent.pos[0] + (button_spacing * 3) + (button_size * 2), root.height - ((button_spacing + button_size) * (ratio_loc + 0))
        size_hint: None, None
        size: button_size, button_size        
        on_press: root.set_ratio(5 / 4)
      Button:            
        id: ratio_current_button
        text: 'Original'
        font_size: ratio_font_size
        pos: self.parent.pos[0] + (button_spacing * 4) + (button_size * 3), root.height - ((button_spacing + button_size) * (ratio_loc + 0))
        size_hint: None, None
        size: (button_size * 2) + button_spacing, button_size
        on_press: root.set_ratio(None)
      Button:            
        id: ratio_1_1_button
        text: '1:1'
        font_size: ratio_font_size
        pos: self.parent.pos[0] + (button_spacing * 1) + (button_size * 0), root.height - ((button_spacing + button_size) * (ratio_loc + 1))
        size_hint: None, None
        size: button_size, button_size              
        on_press: root.set_ratio(1)  
      Button:            
        id: ratio_2_3_button
        text: '2:3'
        font_size: ratio_font_size
        pos: self.parent.pos[0] + (button_spacing * 2) + (button_size * 1), root.height - ((button_spacing + button_size) * (ratio_loc + 1))
        size_hint: None, None
        size: button_size, button_size        
        on_press: root.set_ratio(2 / 3)                       
      Button:            
        id: ratio_4_5_button
        text: '4:5'
        font_size: ratio_font_size
        pos: self.parent.pos[0] + (button_spacing * 3) + (button_size * 2), root.height - ((button_spacing + button_size) * (ratio_loc + 1))
        size_hint: None, None
        size: button_size, button_size        
        on_press: root.set_ratio(4 / 5)                  
      Button:            
        id: position_reset_button
        text: 'Reset'
        font_size: ratio_font_size
        pos: self.parent.pos[0] + (button_spacing * 4) + (button_size * 3), root.height - ((button_spacing + button_size) * (ratio_loc + 1))
        size_hint: None, None
        size: (button_size * 2) + button_spacing, button_size        
        on_press: root.position_reset()
      
      Label:
        id: brightness_label
        pos: self.parent.pos[0] + (button_spacing * 2), root.height - ((button_spacing + button_size) * (adjustment_loc + 0) - 18)
        text: 'Brightness'
        font_size: ratio_font_size
        size_hint: None, None
        text_size: self.size
      Slider:
        id: brightness_slider
        pos: self.parent.pos[0], root.height - ((button_spacing + button_size) * (adjustment_loc + 0))
        size_hint: None, None
        size: self.parent.size[0], button_size
        value_track_width: 1
        min: -100
        max: 100
        step: 1
        orientation: 'horizontal'
        on_value: root.set_brightness(self.value / 100)
      Label:
        id: contrast_label
        pos: self.parent.pos[0] + (button_spacing * 2), root.height - ((button_spacing + button_size) * (adjustment_loc + 1) - 18)
        text: 'Contrast'
        font_size: ratio_font_size
        size_hint: None, None
        text_size: self.size 
      Slider:
        id: contrast_slider
        pos: self.parent.pos[0], root.height - ((button_spacing + button_size) * (adjustment_loc + 1))
        size_hint: None, None
        size: self.parent.size[0], button_size
        value_track_width: 1
        min: -100
        max: 100
        step: 1
        orientation: 'horizontal'
        on_value: root.set_contrast(self.value / 100)
      Label:
        id: saturation_label
        pos: self.parent.pos[0] + (button_spacing * 2), root.height - ((button_spacing + button_size) * (adjustment_loc + 2) - 18)
        text: 'Saturation'
        font_size: ratio_font_size
        size_hint: None, None
        text_size: self.size       
      Slider:
        id: saturation_slider
        pos: self.parent.pos[0], root.height - ((button_spacing + button_size) * (adjustment_loc + 2))
        size_hint: None, None
        size: self.parent.size[0], button_size
        value_track_width: 1
        min: -100
        max: 100
        step: 1
        orientation: 'horizontal'
        on_value: root.set_saturation(self.value / 100)
      Label:
        id: gamma_label
        pos: self.parent.pos[0] + (button_spacing * 2), root.height - ((button_spacing + button_size) * (adjustment_loc + 3) - 18)
        text: 'Gamma'
        font_size: ratio_font_size
        size_hint: None, None
        text_size: self.size 
      Slider:
        id: gamma_slider
        pos: self.parent.pos[0], root.height - ((button_spacing + button_size) * (adjustment_loc + 3))
        size_hint: None, None
        size: self.parent.size[0], button_size
        value_track_width: 1
        min: -100
        max: 100
        step: 1
        orientation: 'horizontal'
        on_value: root.set_gamma(self.value / 100)
      Button:
        id: adjustment_undo_redo_button
        text: 'Undo'
        font_size: ratio_font_size
        pos: self.parent.pos[0] + (button_spacing * 4) + (button_size * 3), root.height - ((button_spacing + button_size) * (adjustment_loc + 4))
        size_hint: None, None
        size: (button_size * 2) + button_spacing, button_size
        on_press: root.adjustment_undo_redo()
      
      Button:
        id: save_button
        text: 'Save a copy'
        pos: self.parent.pos[0] + button_spacing, root.height - ((button_spacing + button_size) * (save_loc + 0))
        size_hint: None, None
        size: self.parent.size[0] - (button_spacing * 2), button_size
        on_press: root.save()
      Label:
        id: save_label
        text: 'Saving...'
        pos: self.parent.pos[0] + button_spacing, root.height - ((button_spacing + button_size) * (save_loc + 0.8))
        size_hint: None, None
        size: self.parent.size[0] - (button_spacing * 2), button_size
        opacity: 0
